#
CREATE SOURCE TABLE ELSEVIER_RAW_RESNET_NODES (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-raw-resnet-nodes', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_RAW_RESNET_CONTROLS (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-raw-resnet-controls', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_RAW_RESNET_LINKS (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-raw-resnet-links', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_RAW_RESNET_OBJECTTYPES (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-raw-resnet-objecttypes', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_RAW_RESNET_STRCONTROLPROPS (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-raw-resnet-strcontrolprops', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_RAW_RESNET_CONTROLPROPS (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-raw-resnet-controlprops', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_RAW_RESNET_MEMOCONTROLPROPS (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-raw-resnet-memocontrolprops', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_RAW_RESNET_DICTCONTROLPROPS (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-raw-resnet-dictcontrolprops', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_RAW_RESNET_INTCONTROLPROPS (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-raw-resnet-intcontrolprops', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_RAW_RESNET_STRNODEPROPS (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-raw-resnet-strnodeprops', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_RAW_RESNET_NODEPROPS (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-raw-resnet-nodeprops', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_RAW_RESNET_NUMNODEPROPS (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-raw-resnet-numnodeprops', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_RAW_RESNET_ANNOTATIONS (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-raw-resnet-annotations', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_RAW_RESNET_DICTNODEPROPS (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-raw-resnet-dictnodeprops', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_RAW_RESNET_INTNODEPROPS (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-raw-resnet-intnodeprops', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_RAW_RESNET_MEMONODEPROPS (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-raw-resnet-memonodeprops', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_RAW_RESNET_DICT (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-raw-resnet-dict', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_RAW_RESNET_PROPTYPES (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-raw-resnet-proptypes', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
#
CREATE TABLE COUNT_ELSEVIER_RAW_RESNET_NODES WITH (KAFKA_TOPIC='count_messages_raw', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_raw_resnet_Nodes' KEY,   COUNT(ELSEVIER_RAW_RESNET_NODES.KEY) VALUE FROM ELSEVIER_RAW_RESNET_NODES  GROUP BY 'elsevier_raw_resnet_Nodes';
CREATE TABLE COUNT_ELSEVIER_RAW_RESNET_CONTROLS WITH (KAFKA_TOPIC='count_messages_raw', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_raw_resnet_Controls' KEY,   COUNT(ELSEVIER_RAW_RESNET_CONTROLS.KEY) VALUE FROM ELSEVIER_RAW_RESNET_CONTROLS  GROUP BY 'elsevier_raw_resnet_Controls';
CREATE TABLE COUNT_ELSEVIER_RAW_RESNET_LINKS WITH (KAFKA_TOPIC='count_messages_raw', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_raw_resnet_Links' KEY,   COUNT(ELSEVIER_RAW_RESNET_LINKS.KEY) VALUE FROM ELSEVIER_RAW_RESNET_LINKS  GROUP BY 'elsevier_raw_resnet_Links';
CREATE TABLE COUNT_ELSEVIER_RAW_RESNET_OBJECTTYPES WITH (KAFKA_TOPIC='count_messages_raw', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_raw_resnet_ObjectTypes' KEY,   COUNT(ELSEVIER_RAW_RESNET_OBJECTTYPES.KEY) VALUE FROM ELSEVIER_RAW_RESNET_OBJECTTYPES  GROUP BY 'elsevier_raw_resnet_ObjectTypes';
CREATE TABLE COUNT_ELSEVIER_RAW_RESNET_STRCONTROLPROPS WITH (KAFKA_TOPIC='count_messages_raw', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_raw_resnet_StrControlProps' KEY,   COUNT(ELSEVIER_RAW_RESNET_STRCONTROLPROPS.KEY) VALUE FROM ELSEVIER_RAW_RESNET_STRCONTROLPROPS  GROUP BY 'elsevier_raw_resnet_StrControlProps';
CREATE TABLE COUNT_ELSEVIER_RAW_RESNET_CONTROLPROPS WITH (KAFKA_TOPIC='count_messages_raw', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_raw_resnet_ControlProps' KEY,   COUNT(ELSEVIER_RAW_RESNET_CONTROLPROPS.KEY) VALUE FROM ELSEVIER_RAW_RESNET_CONTROLPROPS  GROUP BY 'elsevier_raw_resnet_ControlProps';
CREATE TABLE COUNT_ELSEVIER_RAW_RESNET_MEMOCONTROLPROPS WITH (KAFKA_TOPIC='count_messages_raw', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_raw_resnet_MemoControlProps' KEY,   COUNT(ELSEVIER_RAW_RESNET_MEMOCONTROLPROPS.KEY) VALUE FROM ELSEVIER_RAW_RESNET_MEMOCONTROLPROPS  GROUP BY 'elsevier_raw_resnet_MemoControlProps';
CREATE TABLE COUNT_ELSEVIER_RAW_RESNET_DICTCONTROLPROPS WITH (KAFKA_TOPIC='count_messages_raw', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_raw_resnet_DictControlProps' KEY,   COUNT(ELSEVIER_RAW_RESNET_DICTCONTROLPROPS.KEY) VALUE FROM ELSEVIER_RAW_RESNET_DICTCONTROLPROPS  GROUP BY 'elsevier_raw_resnet_DictControlProps';
CREATE TABLE COUNT_ELSEVIER_RAW_RESNET_INTCONTROLPROPS WITH (KAFKA_TOPIC='count_messages_raw', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_raw_resnet_IntControlProps' KEY,   COUNT(ELSEVIER_RAW_RESNET_INTCONTROLPROPS.KEY) VALUE FROM ELSEVIER_RAW_RESNET_INTCONTROLPROPS  GROUP BY 'elsevier_raw_resnet_IntControlProps';
CREATE TABLE COUNT_ELSEVIER_RAW_RESNET_STRNODEPROPS WITH (KAFKA_TOPIC='count_messages_raw', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_raw_resnet_StrNodeProps' KEY,   COUNT(ELSEVIER_RAW_RESNET_STRNODEPROPS.KEY) VALUE FROM ELSEVIER_RAW_RESNET_STRNODEPROPS  GROUP BY 'elsevier_raw_resnet_StrNodeProps';
CREATE TABLE COUNT_ELSEVIER_RAW_RESNET_NODEPROPS WITH (KAFKA_TOPIC='count_messages_raw', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_raw_resnet_NodeProps' KEY,   COUNT(ELSEVIER_RAW_RESNET_NODEPROPS.KEY) VALUE FROM ELSEVIER_RAW_RESNET_NODEPROPS  GROUP BY 'elsevier_raw_resnet_NodeProps';
CREATE TABLE COUNT_ELSEVIER_RAW_RESNET_NUMNODEPROPS WITH (KAFKA_TOPIC='count_messages_raw', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_raw_resnet_NumNodeProps' KEY,   COUNT(ELSEVIER_RAW_RESNET_NUMNODEPROPS.KEY) VALUE FROM ELSEVIER_RAW_RESNET_NUMNODEPROPS  GROUP BY 'elsevier_raw_resnet_NumNodeProps';
CREATE TABLE COUNT_ELSEVIER_RAW_RESNET_ANNOTATIONS WITH (KAFKA_TOPIC='count_messages_raw', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_raw_resnet_Annotations' KEY,   COUNT(ELSEVIER_RAW_RESNET_ANNOTATIONS.KEY) VALUE FROM ELSEVIER_RAW_RESNET_ANNOTATIONS  GROUP BY 'elsevier_raw_resnet_Annotations';
CREATE TABLE COUNT_ELSEVIER_RAW_RESNET_DICTNODEPROPS WITH (KAFKA_TOPIC='count_messages_raw', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_raw_resnet_DictNodeProps' KEY,   COUNT(ELSEVIER_RAW_RESNET_DICTNODEPROPS.KEY) VALUE FROM ELSEVIER_RAW_RESNET_DICTNODEPROPS  GROUP BY 'elsevier_raw_resnet_DictNodeProps';
CREATE TABLE COUNT_ELSEVIER_RAW_RESNET_INTNODEPROPS WITH (KAFKA_TOPIC='count_messages_raw', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_raw_resnet_IntNodeProps' KEY,   COUNT(ELSEVIER_RAW_RESNET_INTNODEPROPS.KEY) VALUE FROM ELSEVIER_RAW_RESNET_INTNODEPROPS  GROUP BY 'elsevier_raw_resnet_IntNodeProps';
CREATE TABLE COUNT_ELSEVIER_RAW_RESNET_MEMONODEPROPS WITH (KAFKA_TOPIC='count_messages_raw', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_raw_resnet_MemoNodeProps' KEY,   COUNT(ELSEVIER_RAW_RESNET_MEMONODEPROPS.KEY) VALUE FROM ELSEVIER_RAW_RESNET_MEMONODEPROPS  GROUP BY 'elsevier_raw_resnet_MemoNodeProps';
CREATE TABLE COUNT_ELSEVIER_RAW_RESNET_DICT WITH (KAFKA_TOPIC='count_messages_raw', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_raw_resnet_Dict' KEY,   COUNT(ELSEVIER_RAW_RESNET_DICT.KEY) VALUE FROM ELSEVIER_RAW_RESNET_DICT  GROUP BY 'elsevier_raw_resnet_Dict';
CREATE TABLE COUNT_ELSEVIER_RAW_RESNET_PROPTYPES WITH (KAFKA_TOPIC='count_messages_raw', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_raw_resnet_PropTypes' KEY,   COUNT(ELSEVIER_RAW_RESNET_PROPTYPES.KEY) VALUE FROM ELSEVIER_RAW_RESNET_PROPTYPES  GROUP BY 'elsevier_raw_resnet_PropTypes';
#
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_PROTEIN (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-Protein', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_DISEASE (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-Disease', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_COMPLEX (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-Complex', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_ORGAN (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-Organ', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_CELLPROCESS (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-CellProcess', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_TISSUE (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-Tissue', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_FUNCTIONALCLASS (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-FunctionalClass', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_VIRUS (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-Virus', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_SMALLMOL (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-SmallMol', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_TREATMENT (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-Treatment', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_CLINICALPARAMETER (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-ClinicalParameter', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_ORGANISM (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-Organism', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_SEMANTICCONCEPT (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-SemanticConcept', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_CELLOBJECT (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-CellObject', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_CELLTYPE (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-CellType', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_GENETICVARIANT (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-GeneticVariant', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_CONTROL_SOURCES (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-Control-Sources', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_PATHOGEN (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-Pathogen', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
#
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_PROTEIN WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_Protein' KEY,   COUNT(ELSEVIER_CBE_RESNET_PROTEIN.KEY) VALUE FROM ELSEVIER_CBE_RESNET_PROTEIN  GROUP BY 'elsevier_cbe_resnet_Protein';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_DISEASE WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_Disease' KEY,   COUNT(ELSEVIER_CBE_RESNET_DISEASE.KEY) VALUE FROM ELSEVIER_CBE_RESNET_DISEASE  GROUP BY 'elsevier_cbe_resnet_Disease';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_COMPLEX WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_Complex' KEY,   COUNT(ELSEVIER_CBE_RESNET_COMPLEX.KEY) VALUE FROM ELSEVIER_CBE_RESNET_COMPLEX  GROUP BY 'elsevier_cbe_resnet_Complex';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_ORGAN WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_Organ' KEY,   COUNT(ELSEVIER_CBE_RESNET_ORGAN.KEY) VALUE FROM ELSEVIER_CBE_RESNET_ORGAN  GROUP BY 'elsevier_cbe_resnet_Organ';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_CELLPROCESS WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_CellProcess' KEY,   COUNT(ELSEVIER_CBE_RESNET_CELLPROCESS.KEY) VALUE FROM ELSEVIER_CBE_RESNET_CELLPROCESS  GROUP BY 'elsevier_cbe_resnet_CellProcess';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_TISSUE WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_Tissue' KEY,   COUNT(ELSEVIER_CBE_RESNET_TISSUE.KEY) VALUE FROM ELSEVIER_CBE_RESNET_TISSUE  GROUP BY 'elsevier_cbe_resnet_Tissue';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_FUNCTIONALCLASS WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_FunctionalClass' KEY,   COUNT(ELSEVIER_CBE_RESNET_FUNCTIONALCLASS.KEY) VALUE FROM ELSEVIER_CBE_RESNET_FUNCTIONALCLASS  GROUP BY 'elsevier_cbe_resnet_FunctionalClass';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_VIRUS WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_Virus' KEY,   COUNT(ELSEVIER_CBE_RESNET_VIRUS.KEY) VALUE FROM ELSEVIER_CBE_RESNET_VIRUS  GROUP BY 'elsevier_cbe_resnet_Virus';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_SMALLMOL WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_SmallMol' KEY,   COUNT(ELSEVIER_CBE_RESNET_SMALLMOL.KEY) VALUE FROM ELSEVIER_CBE_RESNET_SMALLMOL  GROUP BY 'elsevier_cbe_resnet_SmallMol';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_TREATMENT WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_Treatment' KEY,   COUNT(ELSEVIER_CBE_RESNET_TREATMENT.KEY) VALUE FROM ELSEVIER_CBE_RESNET_TREATMENT  GROUP BY 'elsevier_cbe_resnet_Treatment';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_CLINICALPARAMETER WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_ClinicalParameter' KEY,   COUNT(ELSEVIER_CBE_RESNET_CLINICALPARAMETER.KEY) VALUE FROM ELSEVIER_CBE_RESNET_CLINICALPARAMETER  GROUP BY 'elsevier_cbe_resnet_ClinicalParameter';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_ORGANISM WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_Organism' KEY,   COUNT(ELSEVIER_CBE_RESNET_ORGANISM.KEY) VALUE FROM ELSEVIER_CBE_RESNET_ORGANISM  GROUP BY 'elsevier_cbe_resnet_Organism';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_SEMANTICCONCEPT WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_SemanticConcept' KEY,   COUNT(ELSEVIER_CBE_RESNET_SEMANTICCONCEPT.KEY) VALUE FROM ELSEVIER_CBE_RESNET_SEMANTICCONCEPT  GROUP BY 'elsevier_cbe_resnet_SemanticConcept';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_CELLOBJECT WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_CellObject' KEY,   COUNT(ELSEVIER_CBE_RESNET_CELLOBJECT.KEY) VALUE FROM ELSEVIER_CBE_RESNET_CELLOBJECT  GROUP BY 'elsevier_cbe_resnet_CellObject';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_CELLTYPE WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_CellType' KEY,   COUNT(ELSEVIER_CBE_RESNET_CELLTYPE.KEY) VALUE FROM ELSEVIER_CBE_RESNET_CELLTYPE  GROUP BY 'elsevier_cbe_resnet_CellType';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_GENETICVARIANT WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_GeneticVariant' KEY,   COUNT(ELSEVIER_CBE_RESNET_GENETICVARIANT.KEY) VALUE FROM ELSEVIER_CBE_RESNET_GENETICVARIANT  GROUP BY 'elsevier_cbe_resnet_GeneticVariant';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_CONTROL_SOURCES WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_Control_Sources' KEY,   COUNT(ELSEVIER_CBE_RESNET_CONTROL_SOURCES.KEY) VALUE FROM ELSEVIER_CBE_RESNET_CONTROL_SOURCES  GROUP BY 'elsevier_cbe_resnet_Control_Sources';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_PATHOGEN WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier-cbe-resnet-Pathogen' KEY,   COUNT(ELSEVIER_CBE_RESNET_PATHOGEN.KEY) VALUE FROM ELSEVIER_CBE_RESNET_PATHOGEN GROUP BY 'elsevier-cbe-resnet-Pathogen';
#
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_BINDING (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-Binding', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_BIOMARKER (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-Biomarker', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_CELLEXPRESSION (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-CellExpression', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_CHEMICALREACTION (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-ChemicalReaction', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_CLINICALTRIAL (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-ClinicalTrial', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_DIRECTREGULATION (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-DirectRegulation', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_EXPRESSION (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-Expression', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_FUNCTIONALASSOCIATION (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-FunctionalAssociation', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_GENETICCHANGE (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-GeneticChange', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_MOLSYNTHESIS (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-MolSynthesis', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_MOLTRANSPORT (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-MolTransport', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_PROMOTERBINDING (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-PromoterBinding', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_PROTMODIFICATION (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-ProtModification', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_QUANTITATIVECHANGE (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-QuantitativeChange', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_REGULATION (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-Regulation', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_STATECHANGE (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-StateChange', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_MIRNAEFFECT (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-miRNAEffect', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_ANNOTATIONS_PATHWAYSTUDIOONTOLOGY_IS_A (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-Annotations-PathwayStudioOntology-is-a', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_ANNOTATIONS_PATHWAYSTUDIOONTOLOGY_PART_OF (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-Annotations-PathwayStudioOntology-part-of', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
CREATE SOURCE TABLE ELSEVIER_CBE_RESNET_ANNOTATIONS_PATHWAYSTUDIOONTOLOGY_DERIVATIVE_OF (KEY STRING PRIMARY KEY, VALUE STRING) WITH (KAFKA_TOPIC='elsevier-cbe-resnet-Annotations-PathwayStudioOntology-derivative-of', KEY_FORMAT='KAFKA', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='JSON', WRAP_SINGLE_VALUE=false);
#
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_BINDING WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_Binding' KEY,   COUNT(ELSEVIER_CBE_RESNET_BINDING.KEY) VALUE FROM ELSEVIER_CBE_RESNET_BINDING  GROUP BY 'elsevier_cbe_resnet_Binding';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_BIOMARKER WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_Biomarker' KEY,   COUNT(ELSEVIER_CBE_RESNET_BIOMARKER.KEY) VALUE FROM ELSEVIER_CBE_RESNET_BIOMARKER  GROUP BY 'elsevier_cbe_resnet_Biomarker';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_CELLEXPRESSION WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_CellExpression' KEY,   COUNT(ELSEVIER_CBE_RESNET_CELLEXPRESSION.KEY) VALUE FROM ELSEVIER_CBE_RESNET_CELLEXPRESSION  GROUP BY 'elsevier_cbe_resnet_CellExpression';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_CHEMICALREACTION WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_ChemicalReaction' KEY,   COUNT(ELSEVIER_CBE_RESNET_CHEMICALREACTION.KEY) VALUE FROM ELSEVIER_CBE_RESNET_CHEMICALREACTION  GROUP BY 'elsevier_cbe_resnet_ChemicalReaction';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_CLINICALTRIAL WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_ClinicalTrial' KEY,   COUNT(ELSEVIER_CBE_RESNET_CLINICALTRIAL.KEY) VALUE FROM ELSEVIER_CBE_RESNET_CLINICALTRIAL  GROUP BY 'elsevier_cbe_resnet_ClinicalTrial';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_DIRECTREGULATION WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_DirectRegulation' KEY,   COUNT(ELSEVIER_CBE_RESNET_DIRECTREGULATION.KEY) VALUE FROM ELSEVIER_CBE_RESNET_DIRECTREGULATION  GROUP BY 'elsevier_cbe_resnet_DirectRegulation';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_EXPRESSION WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_Expression' KEY,   COUNT(ELSEVIER_CBE_RESNET_EXPRESSION.KEY) VALUE FROM ELSEVIER_CBE_RESNET_EXPRESSION  GROUP BY 'elsevier_cbe_resnet_Expression';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_FUNCTIONALASSOCIATION WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_FunctionalAssociation' KEY,   COUNT(ELSEVIER_CBE_RESNET_FUNCTIONALASSOCIATION.KEY) VALUE FROM ELSEVIER_CBE_RESNET_FUNCTIONALASSOCIATION  GROUP BY 'elsevier_cbe_resnet_FunctionalAssociation';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_GENETICCHANGE WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_GeneticChange' KEY,   COUNT(ELSEVIER_CBE_RESNET_GENETICCHANGE.KEY) VALUE FROM ELSEVIER_CBE_RESNET_GENETICCHANGE  GROUP BY 'elsevier_cbe_resnet_GeneticChange';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_MOLSYNTHESIS WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_MolSynthesis' KEY,   COUNT(ELSEVIER_CBE_RESNET_MOLSYNTHESIS.KEY) VALUE FROM ELSEVIER_CBE_RESNET_MOLSYNTHESIS  GROUP BY 'elsevier_cbe_resnet_MolSynthesis';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_MOLTRANSPORT WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_MolTransport' KEY,   COUNT(ELSEVIER_CBE_RESNET_MOLTRANSPORT.KEY) VALUE FROM ELSEVIER_CBE_RESNET_MOLTRANSPORT  GROUP BY 'elsevier_cbe_resnet_MolTransport';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_PROMOTERBINDING WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_PromoterBinding' KEY,   COUNT(ELSEVIER_CBE_RESNET_PROMOTERBINDING.KEY) VALUE FROM ELSEVIER_CBE_RESNET_PROMOTERBINDING  GROUP BY 'elsevier_cbe_resnet_PromoterBinding';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_PROTMODIFICATION WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_ProtModification' KEY,   COUNT(ELSEVIER_CBE_RESNET_PROTMODIFICATION.KEY) VALUE FROM ELSEVIER_CBE_RESNET_PROTMODIFICATION  GROUP BY 'elsevier_cbe_resnet_ProtModification';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_QUANTITATIVECHANGE WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_QuantitativeChange' KEY,   COUNT(ELSEVIER_CBE_RESNET_QUANTITATIVECHANGE.KEY) VALUE FROM ELSEVIER_CBE_RESNET_QUANTITATIVECHANGE  GROUP BY 'elsevier_cbe_resnet_QuantitativeChange';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_REGULATION WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_Regulation' KEY,   COUNT(ELSEVIER_CBE_RESNET_REGULATION.KEY) VALUE FROM ELSEVIER_CBE_RESNET_REGULATION  GROUP BY 'elsevier_cbe_resnet_Regulation';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_STATECHANGE WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_StateChange' KEY,   COUNT(ELSEVIER_CBE_RESNET_STATECHANGE.KEY) VALUE FROM ELSEVIER_CBE_RESNET_STATECHANGE  GROUP BY 'elsevier_cbe_resnet_StateChange';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_MIRNAEFFECT WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_miRNAEffect' KEY,   COUNT(ELSEVIER_CBE_RESNET_MIRNAEFFECT.KEY) VALUE FROM ELSEVIER_CBE_RESNET_MIRNAEFFECT GROUP BY 'elsevier_cbe_resnet_miRNAEffect';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_ANNOTATIONS_PATHWAYSTUDIOONTOLOGY_IS_A WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_Annotations_PathwayStudioOntology_is_a' KEY,   COUNT(ELSEVIER_CBE_RESNET_ANNOTATIONS_PATHWAYSTUDIOONTOLOGY_IS_A.KEY) VALUE FROM ELSEVIER_CBE_RESNET_ANNOTATIONS_PATHWAYSTUDIOONTOLOGY_IS_A  GROUP BY 'elsevier_cbe_resnet_Annotations_PathwayStudioOntology_is_a';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_ANNOTATIONS_PATHWAYSTUDIOONTOLOGY_PART_OF WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_Annotations_PathwayStudioOntology_part_of' KEY,   COUNT(ELSEVIER_CBE_RESNET_ANNOTATIONS_PATHWAYSTUDIOONTOLOGY_PART_OF.KEY) VALUE FROM ELSEVIER_CBE_RESNET_ANNOTATIONS_PATHWAYSTUDIOONTOLOGY_PART_OF  GROUP BY 'elsevier_cbe_resnet_Annotations_PathwayStudioOntology_part_of';
CREATE TABLE COUNT_ELSEVIER_CBE_RESNET_ANNOTATIONS_PATHWAYSTUDIOONTOLOGY_DERIVATIVE_OF WITH (KAFKA_TOPIC='count_messages_cbe', PARTITIONS=12, REPLICAS=1, VALUE_FORMAT='json') AS SELECT   'elsevier_cbe_resnet_Annotations_PathwayStudioOntology_derivative_of' KEY,   COUNT(ELSEVIER_CBE_RESNET_ANNOTATIONS_PATHWAYSTUDIOONTOLOGY_DERIVATIVE_OF.KEY) VALUE FROM ELSEVIER_CBE_RESNET_ANNOTATIONS_PATHWAYSTUDIOONTOLOGY_DERIVATIVE_OF  GROUP BY 'elsevier_cbe_resnet_Annotations_PathwayStudioOntology_derivative_of';